name: SQL DDL 2 XML Schema
version: '1'
description: >-
  creates a XML definition starting from a SQL description of a table. extremely
  useful for  Text2SQL project.
author: hubert
content: "Je dois générer une représentation XML d'une structure de table SQL en fonction de sa description. Le contenu SQL suivant décrit divers champs, y compris des commentaires qui aident à évaluer leur importance et leur pertinence commerciale.\n\n```SQL\nCREATE TABLE activite (\n\t\"Numero du centre\" int4 NULL, -- utile; identifiant du centre\n\t\"IPP Patient\" float8 NULL, -- utile; numéro unique de patient\n\t\"Numero de secu\" varchar NULL, -- inutile\n\t\"Matricule Sante\" float8 NULL,  -- inutile\n\t\"Nom utilise\" varchar NULL, -- inutile \n\t\"Prenom\" varchar NULL, -- inutile\n\t\"Nom de naissance\" varchar NULL, -- inutile\n\t\"DDN\" date NULL, -- inutile\n\t\"AGE\" float8 NULL, -- utile ; age\n\t\"Code Postal\" float8 NULL, -- utile ; postal code, peut être tronqué pour déduire le départment\n\t\"Motif\" varchar NULL, -- utile; \n\t\"Referent\" varchar NULL, -- utile; Médecin, intervenant en charge du patient\n\t\"DEntree\" date NULL, -- utile ; date d'entrée du patient\n\t\"Mois\" varchar NULL, -- utile; mois déduit de la date d'entrée\n\t\"Jour\" varchar NULL,  -- utile; jour  déduit de la date d'entrée\n\t\"Ferie\" float8 NULL,  -- utile; indicateur si le jour est férié\n\t\"Heure Entree\" varchar NULL,  -- utile; heure déduite de la date d'entrée\n\t\"DSortie\" date NULL,  -- utile; date de sortie\n\t\"Heure Sortie\" varchar NULL,  -- utile; heure  déduite de la date de sortie\n\t\"Medecin encaisseur\" varchar NULL, -- \n\t\"CA medecin\" float8 NULL,\n\t\"CCAM\" varchar NULL,\n\t\"Acte(s)\" varchar NULL,\n\t\"IDE encaisseur\" varchar NULL,\n\t\"CA IDE\" float8 NULL,\n\t\"APS\" varchar NULL,\n\t\"Liste des actes IDE\" varchar NULL,\n\t\"Statut reglement\" varchar NULL,\n\t\"Reglement patient\" varchar NULL,\n\t\"Reglement patient solde\" varchar NULL,\n\t\"FSE\" varchar NULL\n);\n\n```\n\nPour chaque champ, veuillez créer un bloc XML avec la structure suivante, en veillant à prendre en compte attentivement les commentaires sur chaque champ\_:\n\n```xml\n<field>\n   <name>[nom du champ]</name>\n   <sql_type>[type du champ : e.g., varchar, boolean, number]</sql_type>\n   <business_description>[déduire une description complète de l'entreprise à partir du nom du champ et des commentaires]</business_description>\n   <synonyms>[répertorier les synonymes pertinents qui représentent la manière dont les utilisateurs pourraient rechercher ces informations]</synonyms>\n   <text2sql_utile>[indiquez si ce champ est pertinent pour les requêtes de Business Intelligence basées sur les commentaires]</text2sql_utile>\n</field>\n```\n\n**Instructions pour remplir le XML\_:**\n1. Utilisez le **nom de champ** tel que spécifié dans la définition SQL.\n2. Identifiez le **type SQL** directement à partir des définitions.\n3. Fournissez une **description commerciale** qui explique l'importance du champ dans un contexte commercial, en reflétant tous les commentaires qui lui sont associés.\n4. N'incluez les **synonymes** que s'ils sont pertinents et aideront les utilisateurs à rechercher des données liées à ce champ.\n5. Pour **text2sql_utile**, déterminez si le champ sera utilisé dans des requêtes de veille stratégique en fonction de ses commentaires descriptifs\_: répondez par «\_oui\_» ou «\_non\_».\n\nSoyez diligent dans l'utilisation des commentaires pour obtenir vos réponses. Si un champ particulier ne dispose pas de commentaires suffisants pour compléter le bloc XML, veuillez indiquer «\_Informations insuffisantes\_» dans la section correspondante.\n\nTRES IMPORTANT : Le contenu doit être rédigé en français, excepté le nom des balises XML."
model: gpt-4o-mini
