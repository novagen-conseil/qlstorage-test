name: Jira advanced compilation v0.1
description: a workflows that uses differents templates and generates the tickets jira :)
defaultProvider: openai
organization_name: yatchi.leet@gmail.com
author_name: Cmsi_dbt
steps:
  - name: Jira template analyze
    description: Jira template analyzer using context, description and implementation
    type: template
    templateUrl: >-
      https://github.com/novagen-conseil/qlstorage-test/blob/main/templates/2297fde2-cede-4a08-a78c-0aaee8f15570/30f1d9d0-aef8-4b42-9cf8-b4bc60fa76fe/jira-template-analyze.yaml
    provider: openai
    input:
      feature_name: '{{feature_name}}'
      project_key: '{{project_key}}'
      project_details: '{{project_details}}'
    output:
      featured_tickets: featured_tickets
    promptContent: >-
      Project Feature Setup: {{feature_name}}


      This workflow will create a structured set of Jira tickets for
      implementing {{feature_name}}. 


      The tickets will be organized under an epic and will cover different
      aspects of the implementation.


      Project Details:


      Project Key: {{project_key}}

      Feature Name: {{feature_name}}

      Project details Implementation: {{project_details}} 


      !! make sure to include the output feature_tickets variable in the output
      section, use xml tag !!!



      ### Always include the Output in Format in xml tags :


      <featured_tickets>

      [
          {
              "projectKey": {{project_key}},
              "summary": "[Frontend] Implement {{feature_name}} UI Components",
              "description": "Implement the frontend components for {{feature_name}}.\n\nRequirements:\n{{feature_requirements}}\n\nAPI Endpoints:\n{{api_endpoints}}",
              "issuetype": Task,
              "storyPoints": 5,
              "labels": ["frontend", "ui"]
            
          },
          {        "projectKey": {{project_key}},
              "summary": "[Backend] Implement {{feature_name}} Services",
              "description": "Implement the backend services for {{feature_name}}.\n\nTechnical Requirements:\n{{technical_requirements}}\n\nAPI Endpoints:\n{{api_endpoints}}",
              "issuetype": Task,
              "storyPoints": 5,
              "labels": ["backend", "api"]
            
          },...
        ]
      </featured_tickets>
  - name: Article spec generator
    description: A simple tool that generates a full article using some specs
    type: template
    templateUrl: >-
      https://github.com/novagen-conseil/qlstorage-test/blob/main/templates/2297fde2-cede-4a08-a78c-0aaee8f15570/30f1d9d0-aef8-4b42-9cf8-b4bc60fa76fe/article-spec-generator.yaml
    provider: openai
    input:
      spec: $featured_tickets
    output:
      result: result
    promptContent: >-
      You are a highly skilled technical writer with expertise in generating
      comprehensive and structured documentation. Based on the following
      specifications (e.g., API documentation, software requirements, product
      features): 


      {{spec}},


      please produce a detailed article that includes the following sections:


      Introduction : Provide an overview of the specifications and their
      significance.

      Requirements : Detail the essential requirements derived from the
      specifications.

      Implementation Details : Offer insights into how the specifications can be
      implemented or used.

      Use Cases : Present several compelling use cases illustrating practical
      applications of the specifications.

      Conclusion : Summarize the key points and potential future considerations.

      Ensure the documentation is clear, concise, and tailored to an audience
      familiar with technical concepts but not necessarily experts in this
      specific area.


      ### Always include the Output in Format in xml tags :


      <result>

      [the article generated, in markdwon,

      a full detailled article that i can present to my team developer]

      </result>
  - name: Mermaid diagram generator
    description: tool that generates a mermaid diagram based on specs
    type: template
    templateUrl: >-
      https://github.com/novagen-conseil/qlstorage-test/blob/main/templates/2297fde2-cede-4a08-a78c-0aaee8f15570/30f1d9d0-aef8-4b42-9cf8-b4bc60fa76fe/mermaid-diagram-generator.yaml
    provider: openai
    input:
      specs: $featured_tickets
    output:
      mermaid_diagram: mermaid_diagram
    promptContent: >-
      As a seasoned expert in creating Mermaid diagrams, please provide a valid
      diagram based on the following specifications: {{specs}} (e.g., flowchart,
      sequence diagram). 

          In your response, include:
          1. A clear rendering of the Mermaid syntax code for the diagram.
          2. An explanation of the key components of the diagram, emphasizing:
              - The significant entities involved.
              - The relationships and connections between these entities.
              - Any specific attributes or notes that help clarify the connections.

          If possible, provide suggestions for potential revisions based on best practices in diagram design. Ensure the explanation is clear enough for someone unfamiliar with the content to understand the structure and relationships depicted.

      ### Always include the Output in Format in xml tags :


      <mermaid_diagram>

      [the valide code of the mermaid diagram generated]

      </mermaid_diagram>
  - name: Jira Tool with advanced features
    description: EnhancedJira
    type: tool
    tool: EnhancedJira
    input:
      operation: '{{createFromTemplate}}'
      templateJson: $featured_tickets
      project_key: '{{project_key}}'
      feature_name: '{{feature_name}}'
      host: '{{host}}'
      email: '{{email}}'
      token: '{{token}}'
    output:
      message: message
      results: results
